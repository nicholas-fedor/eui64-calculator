name: Build

on:
  workflow_call:
    inputs:
      snapshot:
        description: "Whether to run in snapshot mode"
        required: false
        type: boolean
        default: false

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: write
      attestations: write
      id-token: write
    env:
      CGO_ENABLED: 0
      TAG: ${{ github.ref_name }}
    steps:
      - name: Checkout
        uses: actions/checkout@ff7abcd0c3c05ccf6adc123a8cd1fd4fb30fb493
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@e75c3e80bcde46e322cd5845ae46582947c9becd
        with:
          go-version: 1.25.x

      - name: Login to Docker Hub
        uses: docker/login-action@184bdaa0721073962dff0199f1fb9940f07167d1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to GHCR
        uses: docker/login-action@184bdaa0721073962dff0199f1fb9940f07167d1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@e435ccd777264be153ace6237001ef4d979d3a7a
        with:
          distribution: goreleaser
          version: "~> v2"
          args: release --clean --config build/goreleaser/prod.yaml ${{ inputs.snapshot && '--snapshot' || '' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@e8998f949152b193b063cb0ec769d69d929409be # v2
        if: success()
        with:
          subject-path: "dist/**/*"
